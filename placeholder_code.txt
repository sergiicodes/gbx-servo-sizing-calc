# Import Libraries 
import pandas as pd 

# Pandas Read
location = r"C:\Users\shacosta\Desktop\Analyzer Selection - Copy.xlsx"
try:
    df = pd.read_excel(location)
except:
    print("Error: could not read Excel file")
    exit()

# Gearbox Section
gbx_item_num = pd.to_numeric(df.iloc[1:,0], errors='coerce').dropna().apply(lambda x: int(x))
gbx_name = df.iloc[1:, 1].astype(str).str.strip() 
gbx_frame = pd.to_numeric(df.iloc[1:,2], errors='coerce')
gbx_ratio = pd.to_numeric(df.iloc[1:,3], errors='coerce')
gbx_speed = pd.to_numeric(df.iloc[1:,4], errors='coerce')
gbx_torque = pd.to_numeric(df.iloc[1:,5], errors='coerce')
gbx_cost = pd.to_numeric(df.iloc[1:,6], errors='coerce')

# Drive Section 
drive_item_num = pd.to_numeric(df.iloc[1:,16], errors='coerce').dropna().apply(lambda x: int(x))
drive_name = df.iloc[1:, 17].astype(str).str.strip()
drive_name = drive_name[drive_name != 'nan'].reset_index(drop=True) 
drive_series = pd.to_numeric(df.iloc[1:,18], errors='coerce').dropna()
drive_cost = pd.to_numeric(df.iloc[1:,19], errors='coerce').dropna()

# Inputs
gbx_type = "NPL"

if gbx_type == "Cone Drive":
    first_three_letters = "S"
else:
    first_three_letters = gbx_type[:4]  # Get the first two letters of the selected gearbox type

# Filter the gbx_name column based on the first two letters of gearbox names
selected_gbx_names = gbx_name[gbx_name.str.startswith(first_three_letters)]

# Error Handling 
if len(selected_gbx_names) == 0:
    print("No gearbox names found for the selected type.")
else:
    pass

# Servo Section
servo_item_num = pd.to_numeric(df.iloc[1:,9], errors='coerce').dropna().apply(lambda x: int(x))
servo_name = df.iloc[1:, 10].astype(str).str.strip()
servo_name = servo_name[servo_name != 'nan'].reset_index(drop=True) 
servo_cont_torque = pd.to_numeric(df.iloc[1:,11], errors='coerce').dropna()
servo_peak_torque = pd.to_numeric(df.iloc[1:,12], errors='coerce').dropna()
servo_velocity = pd.to_numeric(df.iloc[1:,13], errors='coerce').dropna()
servo_cost = pd.to_numeric(df.iloc[1:,15], errors='coerce').dropna()

servo_and_drive_TOTALcost = pd.to_numeric(df.iloc[1:,20], errors='coerce').dropna().reset_index()

three_cols = (servo_name , drive_name, servo_and_drive_TOTALcost)

# Create a dataframe from the servo_drive_list
servo_drive_df = pd.DataFrame(three_cols)

# Print the DataFrame
#print(servo_drive_df)
